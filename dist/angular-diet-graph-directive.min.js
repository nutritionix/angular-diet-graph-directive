"use strict";!function(){angular.module("nix.diet-graph-directive",["nix.track-api-client","angularMoment"]).run(["$templateCache",function(t){t.put("nix.diet-graph-directive.html",'<div class="nix_diet-graph">\n        <div class="panel panel-default panel-graph">\n          <div class="panel-heading">{{vm.title}}</div>\n          <div class="panel-body text-center">\n            <div style="display: inline-block" class="heat-map-calendar">\n              <button ng-disabled="vm.disableNavigation || vm.disablePrev" class="previous" class="btn">\n                <i class="fa fa-chevron-left"></i>\n              </button>\n              <button ng-disabled="vm.disableNavigation || vm.disableNext" class="next" class="btn">\n                <i class="fa fa-chevron-right"></i>\n              </button>\n              <div class="heatMap"></div>\n            </div>\n\n            <div class="row graph-summary" ng-if="vm.stats.total || vm.stats.missed">\n              <div class="column" ng-if="!vm.showMissed">\n                <p>Total Days Tracked</p>\n                <strong>{{vm.stats.total}} Days</strong>\n              </div>\n              <div class="column" ng-if="vm.showMissed">\n                <p>Days Missed</p>\n                <strong>{{vm.stats.missed}} Days</strong>\n              </div>\n              <div class="column">\n                <p>% Days of Green</p>\n                <strong>{{vm.stats.greenPercentage | number: 0}}%</strong>\n              </div>\n            </div>\n          </div>\n       </div>\n      </div>')}]).directive("dietGraph",["$filter","$log","$timeout","moment","$q",function(t,n,a,e,i){return{templateUrl:"nix.diet-graph-directive.html",replace:!0,restrict:"AE",controllerAs:"vm",scope:{},bindToController:{api:"=?",nutrientId:"=?",target:"=?",enableFdaRound:"=?",onClickHandler:"=?",initialDisplayDate:"=?",showMissed:"=?"},controller:["$scope","nixTrackApiClient",function(t,n){var a=this;a.$onInit=function(){a.disableNavigation=!1,a.disablePrev=!1,a.disableNext=!1,a.monthOffset=0,a.target=a.target||a.targetCalories||2e3,a.nutrientId=a.nutrientId||208,a.legend=[85,92.5,100,107.5,115],a.afterLoadDomain=function(){a.stats.calculate()},a.stats={calculate:function(){var n=t.clone().add(a.monthOffset,"month").format("YYYY-MM"),i=this.currentMonthTotals={};Object.keys(a.calendar).forEach(function(t){var o=a.calendar[t];e(1e3*t).format("YYYY-MM")===n&&(i[t]=o)}),this.total=Object.keys(i).length,e().format("YYYY-MM")===n?this.missed=e().date()-1-Object.keys(i).filter(function(t){return e(1e3*t).format("YYYY-MM-DD")<e().format("YYYY-MM-DD")}).length:e().format("YYYY-MM")<n?this.missed=0:this.missed=e(n).daysInMonth()-this.total,this.green=Object.values(i).filter(function(t){return t<=100}).length,this.greenPercentage=this.green/this.total*100||0},currentMonthTotals:null,total:null,missed:null,green:null,greenPercentage:null},a.calendar={},a.fullData={};var t=e(a.initialDisplayDate);a.loadTotals=function(){var i=a.monthOffset,o=t.clone().startOf("month");i&&o.add(i,"month");var l=o.clone().add(1,"month"),r=a.loadTotals.loaded.indexOf(i)>-1;n("/reports/totals",{method:"GET",params:{begin:o.format("YYYY-MM-DD"),end:l.format("YYYY-MM-DD"),timezone:e.tz.guess()||"US/Eastern"},ignoreLoadingBar:r}).then(function(t){var n=t.data;angular.forEach(n.dates,function(t){if(t.total_cal>0||t.total_cal_burned>0){var n=(t.total_cal-t.total_cal_burned)/(t.daily_kcal_limit||a.target)*100;a.calendar[e(t.date).unix()]=n,a.fullData[e(t.date).unix()]=t}}),a.stats.calculate(),r||a.loadTotals.loaded.push(i)})},a.loadTotals.loaded=[],a.loadTotals(),a.api={refresh:function(){return a.loadTotals()}}}}],link:function(n,o,l,r){var s=new CalHeatMap,d={next:o.find(".next"),previous:o.find(".previous")},c={208:{title:"Calories",round:"calories"},205:{title:"Carb",round:"total_carb"},204:{title:"Fat",round:"total_fat"},203:{title:"Protein",round:"protein"},307:{title:"Sodium",round:"sodium"}}[r.nutrientId];r.title=l.title||"Diet Logging Graph",s.formatNumber=function(n){return r.enableFdaRound&&(n=t("fdaRound")(n,c.round)),t("number")(n,0)};var u=250,f=e(r.initialDisplayDate);s.init({animationDuration:u,tooltip:!0,itemSelector:o.find(".heatMap")[0],nextSelector:d.next[0],previousSelector:d.previous[0],domain:"month",subDomain:"x_day",subDomainTextFormat:"%d",range:1,start:e(r.initialDisplayDate).toDate(),afterLoadPreviousDomain:function(t){a(function(){r.monthOffset=-f.clone().startOf("month").diff(e(t).startOf("month"),"month"),r.loadTotals(),r.afterLoadDomain(t)})},afterLoadNextDomain:function(t){a(function(){r.monthOffset=-f.clone().startOf("month").diff(e(t).startOf("month"),"month"),r.loadTotals(),r.afterLoadDomain(t)})},onMinDomainReached:function(t){r.disablePrev=!!t},onMaxDomainReached:function(t){r.disableNext=!!t},onClick:function(t,a){r.onClickHandler&&(r.onClickHandler(t,a),n.$apply())},legend:r.legend,displayLegend:!0,legendHorizontalPosition:"center",cellSize:28,label:{position:"top",align:"left",offset:{x:-103,y:0}},weekStartOnMonday:!1,domainLabelFormat:"%B %Y",subDomainTitleFormat:{empty:"not tracked",filled:{format:function(n){var a=r.fullData[e(n.date,"dddd MMMM DD, YYYY").unix()];return t("number")(a.total_cal,0)+" "+c.title+" consumed\n"+(t("number")(a.total_cal_burned,0)+" "+c.title+" burned")}}}});var m=i.resolve();o.on("click","button.next, button.previous",function(t){r.disableNavigation=!0,n.$apply(),m=a(function(){return r.disableNavigation=!1},u+5)}),r.api.jumpTo=function(t){s.jumpTo(e(t).toDate())},n.$watchCollection("vm.calendar",function(){var t=r.calendar;t&&m.then(function(){try{s.update(t),s.options.data=t}catch(n){}})})}}}])}();